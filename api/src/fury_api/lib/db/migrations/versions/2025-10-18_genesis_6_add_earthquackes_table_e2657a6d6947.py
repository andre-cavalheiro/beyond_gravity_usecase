"""genesis_6_add_earthquackes_table.

Revision ID: e2657a6d6947
Revises: d0cbcbb4b236
Create Date: 2025-10-18 02:47:11.892054+00:00

"""

from __future__ import annotations

import warnings

import sqlalchemy as sa
import sqlmodel
from alembic import op


__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

# revision identifiers, used by Alembic.
revision = "e2657a6d6947"
down_revision = "d0cbcbb4b236"
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)

        schema_upgrades()
        data_upgrades()
        schema_upgrades_pos_data()


def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)

        data_downgrades()
        schema_downgrades()


def schema_upgrades() -> None:
    """Schema upgrade migrations go here."""

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "earthquake",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("external_id", sa.String(length=32), nullable=True),
        sa.Column("magnitude", sa.Float(), nullable=True),
        sa.Column("magnitude_type", sa.String(length=16), nullable=True),
        sa.Column("place", sa.String(length=255), nullable=True),
        sa.Column("status", sa.String(length=32), nullable=True),
        sa.Column("event_type", sa.String(length=32), nullable=True),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("detail_url", sa.String(length=512), nullable=True),
        sa.Column("info_url", sa.String(length=512), nullable=True),
        sa.Column("significance", sa.Integer(), nullable=True),
        sa.Column("tsunami", sa.Boolean(), nullable=True),
        sa.Column("felt_reports", sa.Integer(), nullable=True),
        sa.Column("cdi", sa.Float(), nullable=True),
        sa.Column("mmi", sa.Float(), nullable=True),
        sa.Column("alert", sa.String(length=16), nullable=True),
        sa.Column("station_count", sa.Integer(), nullable=True),
        sa.Column("minimum_distance", sa.Float(), nullable=True),
        sa.Column("rms", sa.Float(), nullable=True),
        sa.Column("gap", sa.Float(), nullable=True),
        sa.Column("occurred_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("external_updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("latitude", sa.Float(), nullable=True),
        sa.Column("longitude", sa.Float(), nullable=True),
        sa.Column("depth_km", sa.Float(), nullable=True),
        sa.Column("last_updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_earthquake")),
    )
    with op.batch_alter_table("earthquake", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_earthquake_external_id"), ["external_id"], unique=False)

    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.add_column(sa.Column("active_token_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True))
        batch_op.alter_column("firebase_id", existing_type=sa.VARCHAR(), nullable=True)

    # ### end Alembic commands ###


def schema_downgrades() -> None:
    """Schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.alter_column("firebase_id", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.drop_column("active_token_id")

    with op.batch_alter_table("earthquake", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_earthquake_external_id"))

    op.drop_table("earthquake")
    # ### end Alembic commands ###


def schema_upgrades_pos_data() -> None:
    """Schema upgrade migrations that need to be run after data migrations go here."""


def data_upgrades() -> None:
    """Data upgrade migrations go here."""


def data_downgrades() -> None:
    """Data downgrade migrations go here."""
