"""add users fk to organization.

Revision ID: 6781bf251402
Revises: 2fc818493884
Create Date: 2023-12-15 02:43:04.904105+00:00

"""

from __future__ import annotations

import warnings

import sqlalchemy as sa
from alembic import op

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

# revision identifiers, used by Alembic.
revision = "6781bf251402"
down_revision = "2fc818493884"
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)

        schema_upgrades()
        data_upgrades()
        schema_upgrades_pos_data()


def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)

        data_downgrades()
        schema_downgrades()


def schema_upgrades() -> None:
    """Schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.alter_column("organization_id", existing_type=sa.INTEGER(), nullable=False)
        batch_op.create_foreign_key(
            batch_op.f("fk_user_organization_id_organization"), "organization", ["organization_id"], ["id"]
        )
    # ### end Alembic commands ###


def schema_downgrades() -> None:
    """Schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    # revert user sequence max value
    op.execute("SELECT setval('user_id_seq ', COALESCE((SELECT MAX(id)+1 FROM user), 1), false)")

    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f("fk_user_organization_id_organization"), type_="foreignkey")
        batch_op.alter_column("organization_id", existing_type=sa.INTEGER(), nullable=True)
    # ### end Alembic commands ###


def schema_upgrades_pos_data() -> None:
    """Schema upgrade migrations that need to be run after data migrations go here."""


def data_upgrades() -> None:
    """Data upgrade migrations go here."""


def data_downgrades() -> None:
    """Data downgrade migrations go here."""
